'use client';


import localFont from "next/font/local";
import "./globals.css";
import { StoreProvider } from "@/redux/storeProvider";
import Navbar from "@/components/ui/home/navbar";
import { usePathname } from "next/navigation";
import { useEffect } from "react";
import nProgress from "nprogress";
import { Toaster } from "@/components/ui/toaster"
import { useDispatch } from "react-redux";
import { setToken } from "@/redux/authSlice";
import { useGetUser } from "@/hooks/use-get-user";
import { store } from "@/redux";
import { FormProgressProvider } from "@/context/FormProgressContext";
import dynamic from 'next/dynamic';

const ClientNavbar = dynamic(() => import("@/components/ui/home/navbar"), {
  ssr: false,
});

// Define your custom fonts
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// Metadata for the app
const metadata = {
  title: "Seo Engine",
  description: "Generated by create next app",
};

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en" className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//       <body>
//         <StoreProvider>
//           <Navbar />
//           <main>{children}</main>
//         </StoreProvider>
//       </body>
//     </html>
//   );
// }

nProgress.configure({
  showSpinner: true, // Disable spinner
  easing: 'ease', 
  speed: 800 ,

});

export default function RootLayout({ children }) {
  const pathname = usePathname();
  //const user=useGetUser('/api/profile')

  useEffect(() => {
    nProgress.start();
    nProgress.done();
  }, [pathname]);
  return (
    <html lang="en" className={`font-public-sans antialiased`}>
      <body>
        <StoreProvider store={store}>
          <FormProgressProvider>          
            <Toaster/>
            <ClientNavbar/>
            <main className="bg-white h-full w-full pt-[60px]">{children}</main>
          </FormProgressProvider>
        </StoreProvider>
      </body>
    </html>
  );
}